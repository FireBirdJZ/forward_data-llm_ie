import os
import openai
import json

import web_extractor

# Specify the path to config.json (adjust the path as needed)
config_file_path = '/Users/jasonz/forward_data_lab_llmie/forward_data-llm_ie/config.json'

with open(config_file_path, "r") as config_file:
    config = json.load(config_file)
    openai.api_key = config["api_key"]


def ExtractAndAppendToJSON(url, output_file):
    """
    Extracts information from a webpage and appends it to a JSON file.

    Args:
        url (str): The URL of the webpage to extract information from.
        output_file (str): The name of the JSON file to append to.

    Returns:
        None
    """
    # Extract text from the given URL using web_extractor
    extracted_text = web_extractor.ExtractTextFromWebpage(url)

    # Define the prompt for generating information
    prompt = (
        "From this professor, extract the Education, Research Interests, Email, and other important information "
        "from the text given and output JSON FORMAT- " + extracted_text
    )

    # Use the GPT-3 model to generate a response
    chat_completion = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=[{"role": "user", "content": prompt}]
    )

    # Extract the message generated by the chat model
    chatbot_response = chat_completion['choices'][0]['message']['content']

    # Create a dictionary to store the extracted information
    extracted_info = {
        "professor": url.split("/")[-1],  # Extract professor name from URL
        "information": chatbot_response
    }

    # Append the extracted information to the JSON file
    with open(output_file, "a") as json_file:
        json.dump(extracted_info, json_file, indent=4)
        json_file.write("\n")  # Add a newline to separate entries

    print(f"Information appended to {output_file}")

# Example usage:
profs = ["jeffe", "vadve", "kcchang"]
url = f"https://cs.illinois.edu/about/people/faculty/{profs[2]}"
output_file = "extracted_info.json"
ExtractAndAppendToJSON(url, output_file)