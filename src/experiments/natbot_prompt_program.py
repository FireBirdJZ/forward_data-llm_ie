import openai
import subprocess
import json
import os

# Specify the path to config.json (adjust the path as needed)
config_file_path = '/Users/jasonz/forward_data_lab_llmie/forward_data-llm_ie/config.json'

with open(config_file_path, "r") as config_file:
    config = json.load(config_file)
    openai.api_key = config["api_key"]

def generate_python_code(prompt):
   # Use the GPT-3 model to generate a response
    chat_completion = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=[{"role": "user", "content": prompt}],
    )

    # Extract the message generated by the chat model
    return chat_completion['choices'][0]['message']['content']

def save_and_run_code(code, directory):
    os.makedirs(directory, exist_ok=True)
    code_filename = os.path.join(directory, "natbot_generated_program.py")
    output_filename = os.path.join(directory, "natbot_generated_output.txt")
    generated_output = ""
    with open(code_filename, 'w') as code_file:
        code_file.write(code)
    try:
        result = subprocess.run(["python", code_filename], capture_output=True, text=True, check=True)
        with open(output_filename, 'w') as output_file:
            output_file.write(result.stdout)
            generated_output = result.stdout
    except subprocess.CalledProcessError as e:
        with open(output_filename, 'w') as output_file:
            output_file.write(e.stderr)
    
     
    return code_filename, output_filename, generated_output

def natbot_generate_code(prompt_from_user: str, url: str) -> str:
    chat_prompt = f"Don't output anything in the prompt other than the code so it will run- Generate Python code to print- {prompt_from_user} from this url:{url}"
    generated_code = generate_python_code(chat_prompt)

    output_dir = "natbot_generated_program_directory"  # Specify the directory name
    code_filename, output_filename, generated_output = save_and_run_code(generated_code, output_dir)
    return generated_output
    #print("Generated Code and Output have been saved to the directory:")
    #print(output_dir)
    #print(f"Generated Code: {code_filename}")
    #print(f"Output: {output_filename}")
